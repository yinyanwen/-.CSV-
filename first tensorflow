"""
Tensorflow

"""
import tensorflow as tf

# 定义tensorflow里面的常量

tf.compat.v1.disable_eager_execution() # 优于版本更新，用 tf.compat.v1. 来兼容tensorflow版本1的方法

a = tf.constant([1, 2], dtype=tf.float32, shape=[1, 2], name="a")
b = tf.constant([3, 4], dtype=tf.float32, shape=[1, 2], name="b")
c = tf.constant([5, 6], dtype=tf.float32, shape=[1, 2], name="c")

# 启动tensorflow session
sess = tf.compat.v1.Session() # v2.2 函数前用compat.v1.似乎是必须的

# 计算变量a
sess.run(a)

# 定义s = a + b
s = tf.add(a, b, name="sum")
sess.run(s)

# 定义m = c * s
m = tf.multiply(c, s, name="multiply")
sess.run(m)

# 定义tensorflow里面的变量Variable

x = tf.Variable(0, name="counter")
one = tf.constant(1)
# update = tf.assign(x, tf.add(x, one))
update = tf.compat.v1.assign(x, tf.add(x, one))

"""
变量初始化运算
"""
init = tf.compat.v1.global_variables_initializer()

sess.run(init)
print(sess.run(x))

# 执行一次+1运算
sess.run(update)
print(sess.run(x))

import numpy as np

# 定义tensorflow里面的变量placeholder
mat1 = tf.compat.v1.placeholder(tf.float32, shape=[1, 3], name="mat2")
mat2 = tf.compat.v1.placeholder(tf.float32, shape=[3, 1], name="mat1")
output = tf.compat.v1.matmul(mat1, mat2)

# 传入数据
sess.run([output],
         feed_dict={mat1: np.array([1, 2, 3]).reshape(1, 3),
                    mat2: np.array([4, 5, 6]).reshape(3, 1)})

# 将计算过程的log记录下来，并使用tensorboard进行可视化
writer = tf.compat.v1.summary.FileWriter("logs/tensorflow_basic/", graph=sess.graph)
writer.close() # 后加入代码，关闭writer,不是必须的
